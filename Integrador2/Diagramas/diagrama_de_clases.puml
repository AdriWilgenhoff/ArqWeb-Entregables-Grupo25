@startuml integrador2_clases
top to bottom direction
skinparam classAttributeIconSize 0
skinparam packageStyle rect
skinparam shadowing false



' ==== Paquete DTOs ====
package "DTOs" #LightGreen {
    class EstudianteDTO {
        -String nombre
        -String apellido
        -Integer edad
        -Genero genero
        -String ciudadResidencia
        -Long lu
        +EstudianteDTO(Estudiante estudiante)
        +EstudianteDTO(String nombre, String apellido, Genero genero, LocalDate fechaNacimiento, String ciudadResidencia, Long lu)
    }

    class CarreraDTO {
        -Long idCarrera
        -String nombre
        +CarreraDTO(Carrera c)
    }

    class CarreraDTOCant {
        -Long cantInscriptos
        +CarreraDTOCant(Carrera carrera, Long cantInscriptos)
    }

    class ReporteCarreraDTO {
        -String nombreCarrera
        -int anio
        -long cantGraduados
        -long cantInscriptos
        +ReporteCarreraDTO(String nombreCarrera, int anio, long cantGraduados, long cantInscriptos)
    }
}

' herencia DTO
CarreraDTOCant --|> CarreraDTO

' ==== Paquete Entidades ====
package "Entity" #LightBlue {
    class Estudiante {
        -Long idEstudiante
        -List<Inscripcion> inscripciones
        -String nombre
        -String apellido
        -LocalDate fechaNacimiento
        -Genero genero
        -Long dni
        -String ciudadResidencia
        -Long lu
        +Estudiante()
        +Estudiante(String nombre, String apellido, LocalDate fechaNacimiento, Genero genero, Long dni, String ciudadResidencia, Long lu)
        +getInscripciones(): List<Inscripcion>
        +addInscripciones(Inscripcion e): void
        +getEdad(): int
    }

    class Carrera {
        -Long idCarrera
        -String nombre
        -List<Inscripcion> inscriptos
        +Carrera()
        +Carrera(Long idCarrera, String nombre)
        +getEstudiantes(): List<Inscripcion>
        +addEstudiante(Inscripcion e): void
    }

    class Inscripcion {
        -InscripcionId idInscripcion
        -Carrera carrera
        -Estudiante estudiante
        -LocalDate fecha_inscripcion
        -LocalDate fecha_egreso
        +Inscripcion()
        +Inscripcion(Estudiante estudiante, Carrera carrera)
        +setFechaEgreso(LocalDate fecha): void
        +setFechaEgresoNow(): void
        +setFechaInscripcion(LocalDate fecha_inscripcion): void
        +imprimirAntiguedad(): void
        +isGraduo(): boolean
    }

    class InscripcionId {
        -Long idEstudiante
        -Long idCarrera
    }

    enum Genero {
        MALE
        FEMALE
        POLYGENDER
        AGENDER
        NON_BINARY
        GENDERFLUID
        BIGENDER
    }
}

' ==== Paquete Repositorio ====
package "Repository" #LightYellow {
    interface CrudRepository<T, ID extends Serializable> {
        +T findById(ID id)
        +List<T> findAll()
        +void create(T entity)
        +void update(T entity)
        +void delete(T entity)
    }

    interface EstudianteRepository {
        +List<EstudianteDTO> getEstudiantesOrderByApellido()
        +List<EstudianteDTO> findAllByGenero(Genero genero)
        +EstudianteDTO findByNroLibreta(Long nroLibreta)
        +List<EstudianteDTO> getEstudiantesByCarreraAndCiudadResidencia(Long idCarrera, String ciudadResidencia)
    }

    interface CarreraRepository {
        +List<CarreraDTOCant> getCarrerasConInscriptosOrdenadas()
        +Carrera getCarreraByName(String name)
        +List<ReporteCarreraDTO> generarReporteCarreras()
    }

    interface InscripcionRepository {
        ' vacío en el código fuente
    }
}

' ==== Relaciones Entidades ====
Inscripcion "1" o-- "1" InscripcionId : id
Estudiante "0..*" -- "1" Inscripcion : inscripciones
Carrera "0..*" -- "1" Inscripcion : inscripciones

' Dependencias DTOs/repositorios
EstudianteDTO ..> Estudiante
CarreraDTO ..> Carrera
CarreraDTOCant ..> Carrera

EstudianteRepository ..> Estudiante
CarreraRepository ..> Carrera
InscripcionRepository ..> Inscripcion
CrudRepository ..> Estudiante
CrudRepository ..> Carrera
CrudRepository ..> Inscripcion

@enduml